# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:

        carry = 0
        # dummy head
        head = curr = ListNode(0)
        while l1 or l2:
            val = carry
            if l1:
                val += l1.val
                l1 = l1.next
            if l2:
                val += l2.val
                l2 = l2.next
            curr.next = ListNode(val % 10)
            curr = curr.next
            carry = val // 10
        if carry > 0:
            curr.next = ListNode(carry)
        return head.next
        
        
        
#         carry=0
#         out=[]
#         # l1 =[2,4,3]
#         # l2 =[5,6,4]
#         if len(l1)>=len(l2):
#             l2+[0]*(len(l1)-len(l2))
#             for i in range(len(l1)):
#                 print(l1[i]+l2[i]+carry)
#                 out.append((l1[i]+l2[i]+carry)%10)
#                 if (l1[i]+l2[i]+carry)//10 !=0:
#                     carry = (l1[i]+l2[i]+carry)//10
#                 else:
#                     carry = 0
#             if carry !=0:
#                 out.append(carry)
#         print(out)
        # return out
